I had a few aha moments with ternary operators and cool things to improve how I handle statements (e.g., including multiple conditions and increments in loops. I went from poor style on the assembly assignment to much better style on the extension and even better style in clock.c despite little experience with programming.

My extension style was generally good. I was especially happy with the conciseness I attained by learning function calls. I now realize, after reading the 107E style guide, that I should not have intended. One thing I could have improved on was global register use. I used around seven registers! Although this reduced LOC in the middle of my code by not having to shift, it would not be good style given a more robust program. My style in the initial assignment was poor. I was repeating giant chunks of code, and it was redundant. I also wasn’t using function calls, so I was branching often. Furthermore, the naming of my variables was unclear.

I liked the quip about not playing “code golf.” I am now actually playing code golf at code.golf. Moving forward, I should be careful with comments and pay extra attention to what I want to say in my header. Also, I found it surprising that we could not condense conditionals with one statement onto one line. This should be allowed if concise (e.g., “if (x < y) return;” should be valid rather than if (x < y) { \n return; \n }). I realize this is now the final question below.

I understand it is good practice to always enclose the body of an if statement in braces, even if the body is just one line, because it prevents errors and improves readability. I don’t fully agree with this. I don’t claim to have the best style as I have done very little coding in my life, but I included this in assignment 2:

if (count > 9959) count = 0;
else if (count < 0) count = 9959;
else if (count % 100 == 60) count += 40;
else if (count % 100 == 99) count -= 40;

I see nothing wrong with this. Maybe there is some deeper reason why this is problematic, but the conditional if/else structure is clear, and the following lines are concise. If it were a lengthy statement, it might not work, but count = 0 is far from lengthy. It adheres to Google's 80-character line limit.


